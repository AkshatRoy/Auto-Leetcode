class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        # res = set()
        # n, p, z = [], [], []
        # for num in nums:
        #     if num > 0:
        #         p.append(num)
        #     elif num < 0: 
        #         n.append(num)
        #     else:
        #         z.append(num)
        # N, P = set(n), set(p)
        # if z:
        #     for num in P:
        #         if -1*num in N:
        #             res.add((-1*num, 0, num))

        # elif len(z) >= 3:
        #     res.add((0,0,0))
        
        # for i in range(len(n)):
        #     for j in range(i+1,len(n)):
        #         target = -1*(n[i]+n[j])
        #         if target in P:
        #             res.add(tuple(sorted([n[i],n[j],target])))
        # for i in range(len(p)):
        #     for j in range(i+1,len(p)):
        #         target = -1*(p[i]+p[j])
        #         if target in N:
        #             res.add(tuple(sorted([p[i],p[j],target])))
        # return res

        neg = defaultdict(int)
        pos = defaultdict(int)
        zeros = 0
        
        for x in nums:
            if x < 0:
                neg[x] += 1
            elif x > 0:
                pos[x] += 1
            else:
                zeros += 1
        
        r = []
        
        if zeros:
            for n in neg:
                if -n in pos:
                    r.append((0, n, -n))
        
            if zeros > 2:
                r.append((0,0,0))

        for set_a, set_b in ((neg, pos), (pos, neg)):
            set_a_items = list(set_a.items())
            for i, (x, q) in enumerate(set_a_items):
                for x2, q2 in set_a_items[i:]:
                    if x != x2 or (x == x2 and q > 1):
                        if -x-x2 in set_b:
                            r.append((x, x2, -x-x2))

        return r